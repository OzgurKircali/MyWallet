@model EntityLayer.Concrete.Currency
<br />



@using System.Web.UI.WebControls



@Html.DevExpress().Button(settings =>
{

    settings.Name = "PopupInvestmentButton";
    settings.Text = "Yatırım Ekle";
    settings.Styles.Style.BackColor = System.Drawing.Color.Green;
    settings.ControlStyle.CssClass = "btn btn-success btn-lg";
    settings.UseSubmitBehavior = false;
    settings.ClientSideEvents.Click = "function(s,e) { e.processOnServer=false; AddInvestmentPopup.Show(); }";
    settings.Width = 255;
    settings.Height = 50;
    settings.ControlStyle.Font.Name = "Coolvetica";
    settings.ControlStyle.Font.Size = 16;



}).GetHtml()





@Html.DevExpress().PopupControl(
    settings =>
    {

        settings.Name = "AddInvestmentPopup";
        settings.Width = 320;
        settings.AllowDragging = true;
        settings.CloseAction = CloseAction.CloseButton;
        settings.CloseOnEscape = true;
        settings.HeaderText = "Yatırım Ekle";
        settings.ControlStyle.Font.Name = "Coolvetica";
        settings.Modal = true;
        settings.AutoUpdatePosition = true;
        settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
        settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
        settings.SetContent(() =>
        {
            using (Html.BeginForm("AddInvestment", "Investment", FormMethod.Post, new { id = "popupForm", @class = "edit_form" }))
            {


                @Html.DevExpress().FormLayout(s =>
                {
                    s.Name = "InvestmentModalModeFormLayout";
                    s.RequiredMarkDisplayMode = RequiredMarkMode.None;
                    s.Width = Unit.Percentage(100);
                    s.Height = Unit.Percentage(100);


                    s.NestedExtensionWidth = Unit.Percentage(100);
                    s.Items.Add(i =>
                    {
                        i.Name = "InvestmentAmount";
                        i.Caption = "Miktar";
                        i.CaptionStyle.Font.Bold = false;
                        i.CaptionStyle.Font.Name = "Coolvetica";
                        i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                    });
                    s.Items.Add(i =>
                    {
                        i.Name = "m";
                        i.Caption = "Para birimi";
                        i.CaptionStyle.Font.Name = "Coolvetica";
                        i.NestedExtensionType = FormLayoutNestedExtensionItemType.ComboBox;
                        i.SetNestedContent(() =>
                        {
                            ViewContext.Writer.Write("<div class=\"divWithStandardTextBox\">");
                            ViewContext.Writer.Write(Html.DropDownListFor(m => m.CurrencName, (List<SelectListItem>)ViewBag.Currencies, new { @class = "form-control" }));
                            ViewContext.Writer.Write("</div>");

                        });
                    });


                    s.Items.Add(i =>
                    {
                        i.ShowCaption = DefaultBoolean.False;
                        i.SetNestedContent(() =>
                        {
                            Html.DevExpress().Button(
                                buttonSettings =>
                                {
                                    buttonSettings.Name = "btnUpdate";
                                    buttonSettings.ControlStyle.CssClass = "button";
                                    buttonSettings.Width = 80;
                                    buttonSettings.Text = "Kaydet";
                                    buttonSettings.UseSubmitBehavior = true;
                                }
                            ).Render();

                        });
                    });
                }).Render();
            }
        });

        settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
    }).GetHtml()




