@model EntityLayer.Concrete.Loan



@using System.Web.UI.WebControls

<br />

@Html.DevExpress().Button(settings =>
{

    settings.Name = "PopupLoanButton";
    settings.Text = "Kredi Ekle";
    settings.Styles.Style.BackColor = System.Drawing.Color.Green;
    settings.ControlStyle.CssClass = "btn btn-success btn-lg";
    settings.UseSubmitBehavior = false;
    settings.ClientSideEvents.Click = "function(s,e) { e.processOnServer=false; AddLoanPopup.Show(); }";
    settings.Width = 255;
    settings.Height = 50;
    settings.ControlStyle.Font.Name = "Coolvetica";
    settings.ControlStyle.Font.Size = 16;

}).GetHtml()


    



@Html.DevExpress().PopupControl(settings =>
{

    settings.Name = "AddLoanPopup";
    settings.Width = 320;
    settings.AllowDragging = true;
    settings.CloseAction = CloseAction.CloseButton;
    settings.CloseOnEscape = true;
    settings.HeaderText = "Kredi Ekle";
    settings.ControlStyle.Font.Name = "Coolvetica";
    settings.Modal = true;
    settings.AutoUpdatePosition = true;
    settings.PopupHorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.PopupVerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.SetContent(() =>
    {
        using (Html.BeginForm("AddLoan", "Loan", FormMethod.Post, new { id = "loanpopupForm", @class = "edit_form" }))
        {


            @Html.DevExpress().FormLayout(s =>
            {
                s.Name = "LoanModalModeFormLayout";
                s.RequiredMarkDisplayMode = RequiredMarkMode.None;
                s.Width = Unit.Percentage(100);
                s.Height = Unit.Percentage(100);
                s.NestedExtensionWidth = Unit.Percentage(100);

                s.Items.Add(i =>
                {
                    i.Name = "LoanAmount";
                    i.Caption = "Kredi Çekilen Miktar";
                    i.CaptionStyle.Font.Bold = false;
                    i.CaptionStyle.Font.Name = "Coolvetica";
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                });
                s.Items.Add(i =>
                {
                    i.Name = "DebtAmount";
                    i.Caption = "Borç Miktarı";
                    i.CaptionStyle.Font.Bold = false;
                    i.CaptionStyle.Font.Name = "Coolvetica";
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                });

                s.Items.Add(i =>
                {
                    i.Name = "LoanDate";
                    i.FieldName = "LoanDate";
                    i.CaptionStyle.Font.Bold = false;
                    i.Caption = "Tarih";
                    i.CaptionStyle.Font.Name = "Coolvetica";
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.DateEdit;


                });
                s.Items.Add(i =>
                {
                    i.Name = "PaymentDate";
                    i.FieldName = "PaymentDate";
                    i.Caption = "Vade Ödeme Günü";
                    i.CaptionStyle.Font.Bold = false;
                    i.CaptionStyle.Font.Name = "Coolvetica";
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                });
                s.Items.Add(i =>
                {
                    i.Name = "Instalment";
                    i.FieldName = "Instalment";
                    i.Caption = "Vade Miktarı";
                    i.CaptionStyle.Font.Bold = false;
                    i.CaptionStyle.Font.Name = "Coolvetica";
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;
                });
                s.Items.Add(i =>
                {
                    i.Name = "Description";
                    i.FieldName = "TransactionDescription";
                    i.Caption = "Açıklama";
                    i.CaptionStyle.Font.Bold = false;
                    i.CaptionStyle.Font.Name = "Coolvetica";
                    i.NestedExtensionType = FormLayoutNestedExtensionItemType.TextBox;

                });



                s.Items.Add(i =>
                {

                    i.ShowCaption = DefaultBoolean.False;

                    i.SetNestedContent(() =>
                    {


                        Html.DevExpress().Button(
                            buttonSettings =>
                            {
                                buttonSettings.Name = "btnUpdate";
                                buttonSettings.ControlStyle.CssClass = "button";
                                buttonSettings.Width = 80;
                                buttonSettings.Text = "Kaydet";
                                buttonSettings.UseSubmitBehavior = true;
                            }).Render();
                    });
                });
            }).Render();
        }
    });

    settings.ClientSideEvents.CloseUp = "function(s, e){ ASPxClientEdit.ClearEditorsInContainer(null, '', true); }";
}).GetHtml()























